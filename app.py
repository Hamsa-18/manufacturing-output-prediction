# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11bUGu3eTAlKW9HwFTOpl0iL78CTWVdBC
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install streamlit

import streamlit as st
import numpy as np
import pandas as pd
import joblib
import os
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression

st.title("üè≠ Manufacturing Equipment Output Prediction")

MODEL_PATH = "linear_regression_model.pkl"
SCALER_PATH = "scaler.pkl"

if not (os.path.exists(MODEL_PATH) and os.path.exists(SCALER_PATH)):
    st.warning("‚öôÔ∏è Model or scaler not found. Retraining now...")

    df = pd.read_csv("manufacturing_dataset_1000_samples.csv")
    FEATURES = ['Machine_Speed', 'Temperature', 'Pressure', 'Cycle_Time']
    TARGET = 'Parts_Per_Hour'

    X = df[FEATURES]
    y = df[TARGET]

    scaler = StandardScaler()
    X_scaled = scaler.fit_transform(X)

    model = LinearRegression()
    model.fit(X_scaled, y)

    joblib.dump(model, MODEL_PATH)
    joblib.dump(scaler, SCALER_PATH)
    st.success("‚úÖ Model retrained and saved!")

model = joblib.load(MODEL_PATH)
scaler = joblib.load(SCALER_PATH)

st.subheader("üîß Input Parameters")
machine_speed = st.number_input("Machine Speed (rpm)", min_value=0.0)
temperature = st.number_input("Temperature (¬∞C)", min_value=0.0)
pressure = st.number_input("Pressure (bar)", min_value=0.0)
cycle_time = st.number_input("Cycle Time (sec)", min_value=0.0)

if st.button("üîç Predict Output"):
    input_data = np.array([[machine_speed, temperature, pressure, cycle_time]])
    input_scaled = scaler.transform(input_data)
    prediction = model.predict(input_scaled)[0]
    st.success(f"‚úÖ Predicted Parts per Hour: **{prediction:.2f}**")

import os
st.write("üìÇ Files in current folder:", os.listdir("."))

